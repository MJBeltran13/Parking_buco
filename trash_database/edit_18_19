from sqlalchemy import create_engine, Column, Integer, String
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker

# Define the SQLAlchemy base class
Base = declarative_base()

# Define the SQLAlchemy model class
class Sample(Base):
    __tablename__ = 'samples'

    id = Column(Integer, primary_key=True)
    value = Column(Integer)  # Assuming all elements in the array are integers except the last one

# Create an SQLAlchemy engine
engine = create_engine('sqlite:///sample.db', echo=True)  # Change this to your actual database URL

# Bind the engine to the Base class
Base.metadata.bind = engine

# Create a session object
Session = sessionmaker(bind=engine)
session = Session()

# Fetch rows with id 19 and 20 (0-based index in Python)
sample_18 = session.query(Sample).filter_by(id=19).first()
sample_19 = session.query(Sample).filter_by(id=20).first()

# Update the values
sample_18.value = 99  # Example value for index 18
sample_19.value = 88  # Example value for index 19

# Commit the session to save the changes to the database
session.commit()

# Close the session
session.close()
